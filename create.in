#!/bin/sh

# Copyright (C) 2007 Google Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

set -e

DEFAULT_FILE="@sysconfdir@/default/ganeti-instance-debootstrap"
if [ -f "$DEFAULT_FILE" ]; then
    . "$DEFAULT_FILE"
fi

# note: we don't set a default mirror since debian and ubuntu have
# different defaults, and it's better to use the default

# only if the user want to specify a mirror in the defaults file we
# will use it, this declaration is to make sure the variable is set
: ${MIRROR:=""}
: ${PROXY:=""}
: ${SUITE:="lenny"}
: ${ARCH:=""}
: ${EXTRA_PKGS:=""}
: ${GENERATE_CACHE:="yes"}
: ${CLEAN_CACHE:="14"} # number of days to keep a cache file

CACHE_DIR="@localstatedir@/cache/ganeti-instance-debootstrap"

if [ "$GENERATE_CACHE" = "yes" -a ! -d "$CACHE_DIR" ]; then
  mkdir -p "$CACHE_DIR"
fi

DPKG_ARCH=${ARCH:-`dpkg --print-architecture`}
CACHE_FILE="$CACHE_DIR/cache-${SUITE}-${DPKG_ARCH}.tar"

. common.sh

mke2fs -Fjq $blockdev
root_uuid=$(/sbin/vol_id --uuid $blockdev )
if [ -n "$swapdev" ]; then
  mkswap $swapdev
  swap_uuid=$(/sbin/vol_id --uuid $swapdev )
fi

TMPDIR=`mktemp -d` || exit 1
trap "umount $TMPDIR; rmdir $TMPDIR" EXIT

# If it's not a block device try to mount it via loopback device.
# This is needed for file disks.
MOUNT_OPTIONS=""
if [ ! -b $blockdev ]; then
  MOUNT_OPTIONS="$MOUNT_OPTIONS -o loop"
fi
mount $MOUNT_OPTIONS $blockdev $TMPDIR

# remove the cache file if it's old (> 2 weeks) and writable by the owner (the
# default due to the standard umask)
if [ "$CLEAN_CACHE" -a -d "$CACHE_DIR" ]; then
  find "$CACHE_DIR" -name 'cache-*.tar' -type f \
    -daystart -mtime "+${CLEAN_CACHE}" -print0 | \
    xargs -r0 rm -f
fi

if [ -f "$CACHE_FILE" ]; then
  tar xf "$CACHE_FILE" -C $TMPDIR
else
  if [ "$PROXY" ]; then
    export http_proxy="$PROXY"
  fi
  # INCLUDE will be empty if EXTRA_PKGS is null/empty, otherwise we
  # build the full parameter format from it
  INCLUDE=${EXTRA_PKGS:+"--include=$EXTRA_PKGS"}
  debootstrap \
    --arch "$DPKG_ARCH" \
    $INCLUDE \
    "$SUITE" $TMPDIR $MIRROR

  # remove the downloaded debs, as they are no longer needed
  find "$TMPDIR/var/cache/apt/archives" -type f -name '*.deb' -print0 | \
    xargs -r0 rm -f

  # remove the persistent-net rules, otherwise it will remember the node's
  # interfaces as eth0, eth1, ...
  rm -f "$TMPDIR/etc/udev/rules.d/z25_persistent-net.rules"

  if [ "$GENERATE_CACHE" = "yes" ]; then
    TMP_CACHE=`mktemp "${CACHE_FILE}.XXXXXX"`
    tar cf "$TMP_CACHE" -C $TMPDIR .
    mv -f "$TMP_CACHE" "$CACHE_FILE"
  fi
fi

cp -p /etc/hosts $TMPDIR/etc/hosts
cp -p /etc/resolv.conf $TMPDIR/etc/resolv.conf
echo $instance > $TMPDIR/etc/hostname
echo $instance > $TMPDIR/etc/mailname

cat > $TMPDIR/etc/fstab <<EOF
# /etc/fstab: static file system information.
#
# <file system>   <mount point>   <type>  <options>       <dump>  <pass>
UUID=$root_uuid   /               ext3    defaults        0       1
proc              /proc           proc    defaults        0       0
EOF

[ -n "$swapdev" ] && cat >> $TMPDIR/etc/fstab <<EOF
UUID=$swap_uuid   swap            swap    defaults        0       0
EOF

cat > $TMPDIR/etc/network/interfaces <<EOF
auto lo
iface lo inet loopback
EOF

if [ -e $TMPDIR/etc/inittab ]; then
  cat $TMPDIR/etc/inittab | sed -re 's/\stty1$/ console/' \
    > $TMPDIR/etc/inittab.new
  mv $TMPDIR/etc/inittab.new $TMPDIR/etc/inittab
elif [ -e $TMPDIR/etc/event.d/tty1 ]; then
  cat $TMPDIR/etc/event.d/tty1 | sed -re 's/tty1/console/' \
    > $TMPDIR/etc/event.d/console
  rm $TMPDIR/etc/event.d/tty1
fi

umount $TMPDIR
rmdir $TMPDIR
trap - EXIT

exit 0
